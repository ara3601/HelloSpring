
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:

  K8S_NAMESPACE: default
  K8S_DEPLOYMENT_NAME: server-demo
  K8S_CONTAINER_NAME: back-end
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
 
    - name: Set Up Maven
      run: mvn clean install
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: springdemo-app
        IMAGE_TAG: new-${{ github.sha }} 
      run: |
       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
       
    - name: Define deployment file
      run: |
        echo "apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: ${{ env.K8S_DEPLOYMENT_NAME }}
          namespace: ${{ env.K8S_NAMESPACE }}
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: web
          template:
            metadata:
              labels:
                app: web
            spec:
              containers:
              - name: ${{ env.K8S_CONTAINER_NAME }}
                image: ${{ env.ECR_REGISTRY }}/new-${{ github.sha }} :${{ env.GITHUB_SHA }}
                ports:
                - containerPort: 8085" > deployment.yaml

   
    - name: Update kube config
      run: aws eks update-kubeconfig --name new-eks-cluster --region ap-south-1

    - name: Deploy to EKS
      run: |
        kubectl apply -f deployment.yaml
    env:
              AWS_REGION: ap-south-1
              AWS_DEFAULT_REGION: ap-south-1

